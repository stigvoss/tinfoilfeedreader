// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Module.Feeds.Infrastructure.EntityFrameworkCore;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Module.Feeds.Infrastructure.EntityFrameworkCore.Migrations
{
    [DbContext(typeof(FeedContext))]
    [Migration("20190512173456_RemoveCircularReferenceFromSourceAndArticle")]
    partial class RemoveCircularReferenceFromSourceAndArticle
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.0.0-preview5.19227.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Module.Feeds.Domain.Feed", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("FeedCollectionId");

                    b.Property<string>("Name");

                    b.Property<int>("SequenceIndex");

                    b.HasKey("Id");

                    b.HasIndex("FeedCollectionId");

                    b.ToTable("Feed");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4cc67215-2615-4a7a-b4a0-67a04626dbb0"),
                            FeedCollectionId = new Guid("69040700-3b62-42cf-803e-0c26c40db842"),
                            Name = "Local News",
                            SequenceIndex = 1
                        },
                        new
                        {
                            Id = new Guid("a83e49b2-13e1-4e5a-a294-b32740409c50"),
                            FeedCollectionId = new Guid("69040700-3b62-42cf-803e-0c26c40db842"),
                            Name = "Politics",
                            SequenceIndex = 2
                        },
                        new
                        {
                            Id = new Guid("bfdfb55d-8887-41a5-b37c-e7fcfcc2a83e"),
                            FeedCollectionId = new Guid("69040700-3b62-42cf-803e-0c26c40db842"),
                            Name = "Technology",
                            SequenceIndex = 3
                        },
                        new
                        {
                            Id = new Guid("d0867b47-0db5-446e-99e0-5f66674f4ad1"),
                            FeedCollectionId = new Guid("69040700-3b62-42cf-803e-0c26c40db842"),
                            Name = "YouTube Subscriptions",
                            SequenceIndex = 4
                        });
                });

            modelBuilder.Entity("Module.Feeds.Domain.FeedCollection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("FeedCollection");

                    b.HasData(
                        new
                        {
                            Id = new Guid("69040700-3b62-42cf-803e-0c26c40db842")
                        });
                });

            modelBuilder.Entity("Module.Feeds.Domain.Source", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Url")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Source");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6f6ccd9c-f5b1-4f7f-99cf-601da1276cab"),
                            Name = "Ars Technica",
                            Url = "https://feeds.feedburner.com/arstechnica/index"
                        },
                        new
                        {
                            Id = new Guid("7f0e8887-a73a-4a97-b32e-27bf2825d08a"),
                            Name = "The Verge",
                            Url = "https://www.theverge.com/rss/index.xml"
                        },
                        new
                        {
                            Id = new Guid("ff5a433a-2425-4711-85b9-05e4dd86a4de"),
                            Name = "CGP Grey",
                            Url = "https://www.youtube.com/feeds/videos.xml?channel_id=UC2C_jShtL725hvbm1arSV9w"
                        });
                });

            modelBuilder.Entity("Module.Feeds.Domain.Feed", b =>
                {
                    b.HasOne("Module.Feeds.Domain.FeedCollection", null)
                        .WithMany("Feeds")
                        .HasForeignKey("FeedCollectionId");

                    b.OwnsMany("Module.Feeds.Domain.FeedSource", "FeedSources", b1 =>
                        {
                            b1.Property<Guid>("FeedId");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd();

                            b1.Property<string>("Name");

                            b1.Property<Guid?>("SourceId");

                            b1.HasKey("FeedId", "Id");

                            b1.HasIndex("SourceId");

                            b1.ToTable("FeedSource");

                            b1.WithOwner()
                                .HasForeignKey("FeedId");

                            b1.HasOne("Module.Feeds.Domain.Source", "Source")
                                .WithMany()
                                .HasForeignKey("SourceId");

                            b1.HasData(
                                new
                                {
                                    FeedId = new Guid("bfdfb55d-8887-41a5-b37c-e7fcfcc2a83e"),
                                    Id = 1,
                                    SourceId = new Guid("6f6ccd9c-f5b1-4f7f-99cf-601da1276cab")
                                },
                                new
                                {
                                    FeedId = new Guid("bfdfb55d-8887-41a5-b37c-e7fcfcc2a83e"),
                                    Id = 2,
                                    SourceId = new Guid("7f0e8887-a73a-4a97-b32e-27bf2825d08a")
                                },
                                new
                                {
                                    FeedId = new Guid("d0867b47-0db5-446e-99e0-5f66674f4ad1"),
                                    Id = 3,
                                    SourceId = new Guid("ff5a433a-2425-4711-85b9-05e4dd86a4de")
                                });
                        });
                });

            modelBuilder.Entity("Module.Feeds.Domain.Source", b =>
                {
                    b.OwnsMany("Module.Feeds.Domain.Article", "Articles", b1 =>
                        {
                            b1.Property<Guid>("SourceId");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd();

                            b1.Property<string>("ImageUrl");

                            b1.Property<DateTimeOffset>("LastUpdatedDate");

                            b1.Property<DateTimeOffset>("PublishDate");

                            b1.Property<string>("Summary");

                            b1.Property<string>("Title");

                            b1.Property<string>("Url");

                            b1.HasKey("SourceId", "Id");

                            b1.ToTable("Article");

                            b1.WithOwner()
                                .HasForeignKey("SourceId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
